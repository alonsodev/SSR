@model Domain.Entities.InvestigatorViewModel



@{
    ViewBag.HeaderTitleLink = Url.Action("index", "user");
    ViewBag.HeaderTitle = "Investigador";
    ViewBag.Title = "Registrar Investigador";


    Layout = "~/Views/Shared/_PublicLayout.cshtml";
}
<div class="col-md-12 mr-auto">
    <div class="card">
        @using (Html.BeginForm("Crear", "Account", FormMethod.Post, new { id = "form-investigator", title = "Crear Investigador" }))
        {
            <div class="card-body">
                <div id="accordion" role="tablist" aria-multiselectable="true" class="card-collapse">
                    <div class="card card-plain">
                        <div class="card-header" role="tab" id="headingOne">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                Políticas de Uso

                                <i class="now-ui-icons arrows-1_minimal-down"></i>
                            </a>
                        </div>
                        <div id="collapseOne" class="collapse show" role="tabpanel" aria-labelledby="headingOne">
                            <div class="card-body">
                                <p>
                                    El siguiente documento enuncia a las políticas de publicación de cualquier sitio que forme parte de ARCA
                                    y que emplean el dominio arca.co. Los temas que aquí se tratan van de lo general, aplicable para cualquier sitio de la Red, a lo particular del sitio.
                                </p>

                                <div class="form-check mt-3">
                                    <label class="form-check-label">
                                        <input id="chkPoliticasUso" class="form-check-input" type="checkbox">
                                        <span class="form-check-sign"></span>
                                        Aceptar
                                    </label>
                                </div>
                                <span class="text-danger field-validation-error aceptar-error"></span>
                            </div>
                        </div>
                    </div>
                    <div class="card card-plain">
                        <div class="card-header" role="tab" id="headingTwo">
                            <a class="collapsed" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                Registro

                                <i class="now-ui-icons arrows-1_minimal-down"></i>
                            </a>
                        </div>
                        <div id="collapseTwo" class="collapse show" role="tabpanel" aria-labelledby="headingTwo">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="card">
                                            <h3> Datos Básicos</h3>

                                            <div class="card-body">


                                                @Html.AntiForgeryToken()
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                <div class="row">
                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.document_type_id, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.DropDownList("document_type_id", (IEnumerable<SelectListItem>)ViewBag.documentTypes, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.document_type_id, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>

                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.doc_nro, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.EditorFor(model => model.doc_nro, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.doc_nro, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.first_name, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>



                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.second_name, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.EditorFor(model => model.second_name, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.second_name, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>

                                                <div class="row">
                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.last_name, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>



                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.second_last_name, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.EditorFor(model => model.second_last_name, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.second_last_name, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>

                                                <div class="row">
                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.gender_id, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">

                                                            @Html.DropDownList("gender_id", (IEnumerable<SelectListItem>)ViewBag.genders, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.gender_id, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>



                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>

                                                <div class="row">
                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.mobile_phone, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.EditorFor(model => model.mobile_phone, new { htmlAttributes = new { @class = "form-control" } })
                                                            @Html.ValidationMessageFor(model => model.mobile_phone, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>



                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.birthdate_text, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.EditorFor(model => model.birthdate_text, new { htmlAttributes = new { @class = "form-control datepicker" } })
                                                            @Html.ValidationMessageFor(model => model.birthdate_text, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>

                                                </div>



                                                <div class="row">
                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.nationality_id, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.DropDownList("nationality_id", (IEnumerable<SelectListItem>)ViewBag.nationalities, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.nationality_id, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>

                                                   
                                                </div>


                                                <div class="form-group has-label">

                                                    @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "" })
                                                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })

                                                </div>





                                            </div><!-- end content-->


                                        </div><!--  end card  -->
                                    </div> <!-- end col-md-12 -->
                                </div> <!-- end row -->
                            </div>
                        </div>
                    </div>
                    <div class="card card-plain">
                        <div class="card-header" role="tab" id="headingThree">
                            <a class="collapsed" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                Información de Caracterización

                                <i class="now-ui-icons arrows-1_minimal-down"></i>
                            </a>
                        </div>
                        <div id="collapseThree" class="collapse" role="tabpanel" aria-labelledby="headingThree">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="card">


                                            <div class="card-body">

                                                <div class="form-group has-label">

                                                    @Html.LabelFor(model => model.institution_id, htmlAttributes: new { @class = "" })

                                                    @Html.DropDownList("institution_id", (IEnumerable<SelectListItem>)ViewBag.institutions, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.institution_id, "", new { @class = "text-danger" })

                                                </div>
                                                <div class="row">
                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.investigation_group_id, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.DropDownList("investigation_group_id", (IEnumerable<SelectListItem>)ViewBag.investigation_groups, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.investigation_group_id, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>

                                                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.program_id, htmlAttributes: new { @class = "" })</label>

                                                    <div class="col-sm-4">

                                                        <div class="form-group">
                                                            @Html.DropDownList("program_id", (IEnumerable<SelectListItem>)ViewBag.programs, new { @class = "form-control" })
                                                            @Html.ValidationMessageFor(model => model.program_id, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>
                                                </div>

                                                <div class="form-group has-label">

                                                    @Html.LabelFor(model => model.interest_areas, htmlAttributes: new { @class = "" })

                                                    @Html.DropDownList("interest_areas", (IEnumerable<SelectListItem>)ViewBag.interest_areas, new { multiple = "multiple", @class = "form-control" })

                                                    @Html.ValidationMessageFor(model => model.interest_areas, "", new { @class = "text-danger" })

                                                </div>









                                            </div><!-- end content-->


                                        </div><!--  end card  -->
                                    </div> <!-- end col-md-12 -->
                                </div> <!-- end row -->
                            </div>
                        </div>
                    </div>

                    <div class="card card-plain">
                        <div class="card-header" role="tab" id="headingFour">
                            <a class="collapsed" data-toggle="collapse" data-parent="#accordion" href="#collapseFour" aria-expanded="false" aria-controls="collapseFour">
                                Crear Cuenta

                                <i class="now-ui-icons arrows-1_minimal-down"></i>
                            </a>
                        </div>
                        <div id="collapseFour" class="collapse" role="tabpanel" aria-labelledby="headingFour">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4 offset-md-4">
                                        <div class="card">


                                            <div class="card-body">

                                                <div class="form-group has-label">

                                                    @Html.LabelFor(model => model.user_email, htmlAttributes: new { @class = "" })
                                                    @Html.EditorFor(model => model.user_email, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.user_email, "", new { @class = "text-danger" })
                                                    <span class="text-danger field-validation-error email-error"></span>
                                                </div>

                                                <div class="form-group has-label">

                                                    @Html.LabelFor(model => model.user_pass, htmlAttributes: new { @class = "" })
                                                    @Html.PasswordFor(model => model.user_pass, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.user_pass, "", new { @class = "text-danger" })

                                                </div>



                                                <div class="form-group has-label">

                                                    @Html.LabelFor(model => model.user_pass2, htmlAttributes: new { @class = "" })
                                                    @Html.PasswordFor(model => model.user_pass2, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.user_pass2, "", new { @class = "text-danger" })

                                                </div>




                                            </div><!-- end content-->


                                        </div><!--  end card  -->
                                    </div> <!-- end col-md-12 -->
                                </div> <!-- end row -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer text-right">

                <button type="submit" class="btn btn-primary">Registrarse</button>
                
            </div>
        }
    </div>



</div>

    @section Scripts {

        <script type="text/javascript">
        $(function () {
            $("#user_role_id").select2({ theme: "bootstrap" });
            $("#user_status_id").select2({ theme: "bootstrap" });
            $("#nationality_id").select2({ theme: "bootstrap" });
            $("#document_type_id").select2({ theme: "bootstrap" });
            $("#gender_id").select2({ theme: "bootstrap" });
            $("#institution_id").select2({
                theme: "bootstrap",
                language: "es",
                ajax: {
                    url: '/Account/ObtenerInstituciones',
                    type: "POST",
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term,
                            page: params.page || 1
                        };
                    },
                    processResults: function (data, params) {
                        // parse the results into the format expected by Select2
                        // since we are using custom formatting functions we do not need to
                        // alter the remote JSON data, except to indicate that infinite
                        // scrolling can be used
                        params.page = params.page || 1;

                        return {
                            results: data.items,
                            pagination: {
                                more: (params.page * 10) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                minimumInputLength: 0,

            });
            $("#investigation_group_id").select2({ theme: "bootstrap" });
            $("#program_id").select2({ theme: "bootstrap" });
            $("#interest_areas").select2({ theme: "bootstrap" });
            $('.datepicker').datetimepicker({
                locale: 'es',
                format: 'DD/MM/YYYY',
                icons: {
                    time: "now-ui-icons tech_watch-time",
                    date: "now-ui-icons ui-1_calendar-60",
                    up: "fa fa-chevron-up",
                    down: "fa fa-chevron-down",
                    previous: 'now-ui-icons arrows-1_minimal-left',
                    next: 'now-ui-icons arrows-1_minimal-right',
                    today: 'fa fa-screenshot',
                    clear: 'fa fa-trash',
                    close: 'fa fa-remove'
                }
            });
        });

        $('#institution_id').on('select2:select', function (e) {
            // Do something

            console.log($("#institution_id").val());
            $('#investigation_group_id').empty();
            $('#interest_areas').empty();
            $.ajax({
                type: 'POST',
                url: '/Account/ObtenerGrupoInvestigacion',
                data: {
                    institution_id: $("#institution_id").val()
                }
            }).then(function (data) {
                // create the option and append to Select2
                var i;
                for (i = 0; i < data.length; i++) {
                    var option = new Option(data[i].Text, data[i].Value, false, false);
                    $("#investigation_group_id").append(option).trigger('change');
                }

                $("#investigation_group_id option:selected").prop("selected", false);
                // manually trigger the `select2:select` event
                $("#investigation_group_id").trigger({
                    type: 'select2:select',
                    params: {
                        data: data
                    }
                });
            });


        });

        $('#investigation_group_id').on('select2:select', function (e) {
            // Do something

            console.log($("#investigation_group_id").val());
            $('#interest_areas').empty();
            $.ajax({
                type: 'POST',
                url: '/Account/ObtenerAreasInteres',
                data: {
                    investigation_group_id: $("#investigation_group_id").val()
                }
            }).then(function (data) {
                // create the option and append to Select2
                var i;
                for (i = 0; i < data.length; i++) {
                    var option = new Option(data[i].Text, data[i].Value, false, false);
                    $("#interest_areas").append(option).trigger('change');
                }


                // manually trigger the `select2:select` event
                $("#interest_areas").trigger({
                    type: 'select2:select',
                    params: {
                        data: data
                    }
                });
            });


        });


        $("#btnCancelar").click(function () {
            window.location.href = "/Account/login";
        });
        $('.email-error').html('');
        $('#form-investigator').on('submit', function (e) { //use on if jQuery 1.7+
            //prevent form from submitting
            debugger;
            e.preventDefault();
            var form = this;
            $('.aceptar-error').html('');
            var checked = $('#chkPoliticasUso').prop('checked')
            
            if (!checked) {
                $('.aceptar-error').html('Debe aceptar las políticas de uso.');
                return false;
            }
            if ($("#form-investigator").valid()) {


                var valido = false;
                $.ajaxSetup({
                    async: false
                });
                 $.ajax({
                        url: "@Url.Action("Verificar", "User")",
                        type: "POST",
                     data: { user_id: 0, email: $('#user_email').val() }
                    })
                    .done(function (data) {
                        valido = data.valido;
                    })
                    .fail(function (data) {
                        console.log("error");
                    })
                    .always(function (data) {
                        console.log("complete");
                    });



                // Volvemos a dejar las llamadas AJAX síncronas
               $.ajaxSetup({
                    async: true
                });

                if (valido) {
                    form.submit();
                }
                else {
                    $('.email-error').html('<span id="name-error" class="">Ya existe un usuario con el mismo correo electrónico.</span>');
                    return false;
                }




            }

            return false;
        });

        </script>
    }
