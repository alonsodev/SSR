@model Domain.Entities.PeriodViewModel



@{
    ViewBag.HeaderTitleLink = Url.Action("index", "period");
    ViewBag.HeaderTitle = "Periodos legislativo";
    ViewBag.Title = "Crear Periodo legislativo";

    ViewBag.active = "periods";

}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">@ViewBag.Title</h4>
            </div>
            @using (Html.BeginForm("Crear", "Period", FormMethod.Post, new { id = "form-registrar" }))
            {
            <div class="card-body">


                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group has-label">

                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", maxlength = "1000" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    <span class="text-danger field-validation-error name-error"></span>
                </div>

                <div class="form-group has-label">

                    @Html.LabelFor(model => model.start_date_text, htmlAttributes: new { @class = "" })

                    @Html.EditorFor(model => model.start_date_text, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.start_date_text, "", new { @class = "text-danger" })


                </div>

                <div class="form-group has-label">

                    @Html.LabelFor(model => model.end_date_text, htmlAttributes: new { @class = "" })

                    @Html.EditorFor(model => model.end_date_text, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.end_date_text, "", new { @class = "text-danger" })
                    <span class="text-danger field-validation-error end_date-error"></span>

                </div>



            </div><!-- end content-->
            <div class="card-footer text-right">

                <button id="btnCancelar" type="button" class="btn btn-primary">Regresar</button>
                <button type="submit" class="btn btn-primary">Crear</button>
            </div>
            }
        </div><!--  end card  -->
    </div> <!-- end col-md-12 -->
</div> <!-- end row -->




@section Scripts {

    <script type="text/javascript">
        function CambiarFormato(currVal) {
            var rxDatePattern = /^(\d{1,2})(\/|-)(\d{1,2})(\/|-)(\d{4})$/;
            var dtArray = currVal.match(rxDatePattern); // is format OK?

            if (dtArray == null)
                return false;

            //Checks for dd/mm/yyyy format.
            dtDay = dtArray[1];
            dtMonth = dtArray[3];
            dtYear = dtArray[5];

            return dtYear + '/' + dtMonth + '/' + dtDay;
        }
        ea.addMethod('ValidarFechaFin', function () {

            if ($('#end_date_text').val() == '' || $('#start_date_text').val() == '') {
                return true;
            }
            var arrayFecInicio = $("#start_date_text").val();
            var sdFecInicio = CambiarFormato(arrayFecInicio) ;
            var arrayFecFin = $("#end_date_text").val();
            var sdFecFin = CambiarFormato(arrayFecFin);
            return sdFecFin > sdFecInicio;

        });

        $(function () {
            $('.datepicker').datetimepicker({
                locale: 'es',
                format: 'DD/MM/YYYY',
                icons: {
                    time: "now-ui-icons tech_watch-time",
                    date: "now-ui-icons ui-1_calendar-60",
                    up: "fa fa-chevron-up",
                    down: "fa fa-chevron-down",
                    previous: 'now-ui-icons arrows-1_minimal-left',
                    next: 'now-ui-icons arrows-1_minimal-right',
                    today: 'fa fa-screenshot',
                    clear: 'fa fa-trash',
                    close: 'fa fa-remove'
                }
            });
        });

        $("#btnCancelar").click(function () {
            window.location.href = "/Period";
        });

        $('#form-registrar').on('submit', function (e) { //use on if jQuery 1.7+
            //prevent form from submitting
            debugger;
            e.preventDefault();
            var form = this;
            $('.name-error').html('');
            $('.end_date-error').html('');
            
            if ($("#form-registrar").valid()) {


               var valido = false;
                $.ajaxSetup({
                    async: false
                });
                 $.ajax({
                        url: "@Url.Action("Verificar", "Period")",
                        type: "POST",
                     data: { period_id: 0, name: $('#name').val(), start_date_text: $('#start_date_text').val(), end_date_text: $('#end_date_text').val()}
                    })
                    .done(function (data) {
                        valido = data.valido_fechas && data.valido_duplicado;

                        if (!data.valido_duplicado) {
                            $('.name-error').html('<span id="name-error" class="">Ya existe un periodo con el mismo nombre.</span>');
                            return false;
                        }

                        if (!data.valido_fechas) {
                            $('.end_date-error').html('<span id="end_date-error" class="">Ya existe un periodo que se cruza con el rango de fechas ingresado.</span>');
                            return false;
                        }
                    })
                    .fail(function (data) {
                        console.log("error");
                    })
                    .always(function (data) {
                        console.log("complete");
                    });



                // Volvemos a dejar las llamadas AJAX síncronas
               $.ajaxSetup({
                    async: true
                });

                if (valido) {
                    form.submit();
                }
               




            }

            return false;
        });

    </script>
}
