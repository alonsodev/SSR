@model Domain.Entities.DraftLawViewModel



@{
    ViewBag.HeaderTitleLink = Url.Action("index", "DraftLaw");
    ViewBag.HeaderTitle = "Proyectos de Ley";
    ViewBag.Title = "Crear Proyecto de Ley";

    ViewBag.active = "draft_laws";

}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">@ViewBag.Title</h4>
            </div>
            @using (Html.BeginForm("Crear", "DraftLaw", FormMethod.Post, new { id = "form-registrar", title = "Crear Proyecto de Ley" }))
            {
            <div class="card-body">


                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group has-label">

                    @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control", maxlength = "1000" } })
                    @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                    
                </div>
                <div class="row">
                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.draft_law_number, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.EditorFor(model => model.draft_law_number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.draft_law_number, "", new { @class = "text-danger" })
                            <span class="text-danger field-validation-error draft_law_number-error"></span>
                        </div>

                    </div>

                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.author, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.EditorFor(model => model.author, new { htmlAttributes = new { @class = "form-control", maxlength = "1000" } })
                            @Html.ValidationMessageFor(model => model.author, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.origin, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.EditorFor(model => model.origin, new { htmlAttributes = new { @class = "form-control", maxlength = "1000" } })
                            @Html.ValidationMessageFor(model => model.origin, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.date_presentation_text, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.EditorFor(model => model.date_presentation_text, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            @Html.ValidationMessageFor(model => model.date_presentation_text, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>


                <div class="row">
                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.debate_speaker, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.EditorFor(model => model.debate_speaker, new { htmlAttributes = new { @class = "form-control", maxlength = "500" } })
                            @Html.ValidationMessageFor(model => model.debate_speaker, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.debate_speaker2, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.EditorFor(model => model.debate_speaker2, new { htmlAttributes = new { @class = "form-control", maxlength = "500" } })
                            @Html.ValidationMessageFor(model => model.debate_speaker2, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.commission_id, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.DropDownList("commission_id", (IEnumerable<SelectListItem>)ViewBag.commissions, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.commission_id, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control", maxlength = "500" } })
                            @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="form-group has-label">

                    @Html.LabelFor(model => model.status_comment, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.status_comment, new { htmlAttributes = new { @class = "form-control", maxlength = "1000" } })
                    @Html.ValidationMessageFor(model => model.status_comment, "", new { @class = "text-danger" })

                </div>

                <div class="row">
                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.interest_area_id, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.DropDownList("interest_area_id", (IEnumerable<SelectListItem>)ViewBag.interest_areas, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.interest_area_id, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.initiative, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.EditorFor(model => model.initiative, new { htmlAttributes = new { @class = "form-control", maxlength = "1000" } })
                            @Html.ValidationMessageFor(model => model.initiative, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>


                <div class="form-group has-label">

                    @Html.LabelFor(model => model.link, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.link, new { htmlAttributes = new { @class = "form-control", maxlength = "1000" } })
                    @Html.ValidationMessageFor(model => model.link, "", new { @class = "text-danger" })

                </div>

                <div class="form-group has-label">

                    @Html.LabelFor(model => model.summary, htmlAttributes: new { @class = "" })
                    @Html.TextAreaFor(model => model.summary, new {  @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.summary, "", new { @class = "text-danger" })

                </div>
            </div><!-- end content-->
            <div class="card-footer text-right">


                <button id="btnCancelar" type="button" class="btn btn-primary">Regresar</button>
                <button type="submit" class="btn btn-primary">Crear</button>
            </div>
            }
        </div><!--  end card  -->
    </div> <!-- end col-md-12 -->
</div> <!-- end row -->




@section Scripts {

    <script type="text/javascript">
        $(function () {
            $('.datepicker').datetimepicker({
                locale: 'es',
                format: 'DD/MM/YYYY',
                icons: {
                    time: "now-ui-icons tech_watch-time",
                    date: "now-ui-icons ui-1_calendar-60",
                    up: "fa fa-chevron-up",
                    down: "fa fa-chevron-down",
                    previous: 'now-ui-icons arrows-1_minimal-left',
                    next: 'now-ui-icons arrows-1_minimal-right',
                    today: 'fa fa-screenshot',
                    clear: 'fa fa-trash',
                    close: 'fa fa-remove'
                }
            });
            $("#interest_area_id").select2({ theme: "bootstrap" });

        
            $("#commission_id").select2({ theme: "bootstrap" });

            $("#btnCancelar").click(function () {
                window.location.href = "/DraftLaw";
            });


            $('#form-registrar').on('submit', function (e) { //use on if jQuery 1.7+
                //prevent form from submitting
                //debugger;
                e.preventDefault();
                var form = this;
                $('.draft_law_number-error').html('');
                if ($("#form-registrar").valid()) {


                   var valido = false;
                    $.ajaxSetup({
                        async: false
                    });
                     $.ajax({
                            url: "@Url.Action("Verificar", "DraftLaw")",
                            type: "POST",
                         data: { draft_law_id: 0, draft_law_number: parseInt($('#draft_law_number').val() )}
                        })
                        .done(function (data) {
                            valido = data.valido;
                        })
                        .fail(function (data) {
                            console.log("error");
                        })
                        .always(function (data) {
                            console.log("complete");
                        });



                    // Volvemos a dejar las llamadas AJAX síncronas
                   $.ajaxSetup({
                        async: true
                    });

                    if (valido) {
                        form.submit();
                    }
                    else {
                        $('.draft_law_number-error').html('<span id="draft_law_number-error" class="">Ya existe un proyecto de ley con el mismo Nro. de Proyecto.</span>');
                        return false;
                    }




                }

                return false;
            });
        }); 
       

    </script>
}
