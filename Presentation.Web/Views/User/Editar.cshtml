@model Domain.Entities.UserViewModel



@{
    ViewBag.HeaderTitleLink = Url.Action("index", "user");
    ViewBag.HeaderTitle = "Usuarios";
    ViewBag.Title = "Editar Usuarios";

    ViewBag.active = "users";

}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">@ViewBag.Title</h4>
            </div>
            @using (Html.BeginForm("Editar", "User", FormMethod.Post, new { id = "form-user", title = "Editar User" }))
            {
                <div class="card-body">


                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.id)
                    <div class="form-group has-label">

                        @Html.LabelFor(model => model.user_name, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.user_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.user_name, "", new { @class = "text-danger" })

                    </div>
                    <div class="row">
                        <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.document_type_id, htmlAttributes: new { @class = "" })</label>

                        <div class="col-sm-4">

                            <div class="form-group">
                                @Html.DropDownList("document_type_id", (IEnumerable<SelectListItem>)ViewBag.documentTypes, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.document_type_id, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.doc_nro, htmlAttributes: new { @class = "" })</label>

                        <div class="col-sm-4">

                            <div class="form-group">
                                @Html.EditorFor(model => model.doc_nro, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.doc_nro, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.nationality_id, htmlAttributes: new { @class = "" })</label>

                        <div class="col-sm-4">

                            <div class="form-group">
                                @Html.DropDownList("nationality_id", (IEnumerable<SelectListItem>)ViewBag.nationalities, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.nationality_id, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "" })</label>

                        <div class="col-sm-4">

                            <div class="form-group">
                                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>

                    <div class="form-group has-label">

                        @Html.LabelFor(model => model.contract_name, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.contract_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.contract_name, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group has-label">

                        @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group has-label">

                        @Html.LabelFor(model => model.user_email, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.user_email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.user_email, "", new { @class = "text-danger" })
                        <span class="text-danger field-validation-error email-error"></span>
                    </div>
                    <div class="row">
                        <label class="col-sm-2 col-form-label">  @Html.LabelFor(model => model.user_role_id, htmlAttributes: new { @class = "" })</label>

                        <div class="col-sm-4">

                            <div class="form-group">
                                @Html.DropDownList("user_role_id", (IEnumerable<SelectListItem>)ViewBag.roles, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.user_role_id, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.user_status_id, htmlAttributes: new { @class = "" })</label>

                        <div class="col-sm-4">

                            <div class="form-group">
                                @Html.DropDownList("user_status_id", (IEnumerable<SelectListItem>)ViewBag.estatus, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.user_status_id, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>

                </div><!-- end content-->
                <div class="card-footer text-right">

                    <button type="submit" class="btn btn-primary">Actualizar</button>
                    <button id="btnCancelar" type="button" class="btn btn-primary">Regresar</button>
                </div>
            }
        </div><!--  end card  -->
    </div> <!-- end col-md-12 -->
</div> <!-- end row -->




@section Scripts {

    <script type="text/javascript">
        $(function () {
            $("#user_role_id").select2({ theme: "bootstrap" });
            $("#user_status_id").select2({ theme: "bootstrap" });
            $("#nationality_id").select2({ theme: "bootstrap" });
            $("#document_type_id").select2({ theme: "bootstrap" });
        });

        $("#btnCancelar").click(function () {
            window.location.href = "/User";
        });

        $('#form-user').on('submit', function (e) { //use on if jQuery 1.7+
            //prevent form from submitting
            debugger;
            e.preventDefault();
            var form = this;
            $('.email-error').html('');
            if ($("#form-user").valid()) {


              var valido = false;
                $.ajaxSetup({
                    async: false
                });
                 $.ajax({
                        url: "@Url.Action("Verificar", "User")",
                        type: "POST",
                     data: { user_id: $('#id').val(), email: $('#user_email').val() }
                    })
                    .done(function (data) {
                        valido = data.valido;
                    })
                    .fail(function (data) {
                        console.log("error");
                    })
                    .always(function (data) {
                        console.log("complete");
                    });



                // Volvemos a dejar las llamadas AJAX síncronas
               $.ajaxSetup({
                    async: true
                });

                if (valido) {
                    form.submit();
                }
                else {
                    $('.email-error').html('<span id="name-error" class="">Ya existe un usuario con el mismo correo electrónico.</span>');
                    return false;
                }



            }

            return false;
        });

    </script>
}
