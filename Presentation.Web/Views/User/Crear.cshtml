@model Domain.Entities.UserViewModel



@{
    ViewBag.HeaderTitleLink = Url.Action("index", "user");
    ViewBag.HeaderTitle = "Usuarios";
    ViewBag.Title = "Crear Usuarios";

    ViewBag.active = "users";

}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">@ViewBag.Title</h4>
            </div>
            @using (Html.BeginForm("Crear", "User", FormMethod.Post, new { id = "form-user", title = "Examinar" }))
            {
            <div class="card-body">


                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group has-label">

                    @Html.LabelFor(model => model.user_name, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.user_name, new { htmlAttributes = new { @class = "form-control", maxlength = "100" } })
                    @Html.ValidationMessageFor(model => model.user_name, "", new { @class = "text-danger" })

                </div>

                <div class="form-group has-label">
                    @Html.LabelFor(model => model.institution_ids, htmlAttributes: new { @class = "" })
                    @Html.DropDownList("institution_ids", (IEnumerable<SelectListItem>)ViewBag.institutions, new { multiple = "multiple", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.institution_ids, "", new { @class = "text-danger" })

                </div>



                <div class="row">
                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.document_type_id, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.DropDownList("document_type_id", (IEnumerable<SelectListItem>)ViewBag.documentTypes, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.document_type_id, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.doc_nro, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.EditorFor(model => model.doc_nro, new { htmlAttributes = new { @class = "form-control", maxlength = "20" } })
                            @Html.ValidationMessageFor(model => model.doc_nro, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
                <div class="row">
                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.nationality_id, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.DropDownList("nationality_id", (IEnumerable<SelectListItem>)ViewBag.nationalities, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.nationality_id, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.address_country_id, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.DropDownList("address_country_id", (IEnumerable<SelectListItem>)ViewBag.nationalities, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.address_country_id, "", new { @class = "text-danger" })
                        </div>

                    </div>

                   
                </div>
                <div class="row address_department">
                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.department_id, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.DropDownList("department_id", (IEnumerable<SelectListItem>)ViewBag.departments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.department_id, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.address_municipality_id, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.DropDownList("address_municipality_id", (IEnumerable<SelectListItem>)ViewBag.municipalities, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.address_municipality_id, "", new { @class = "text-danger" })
                        </div>

                    </div>

                </div>
                <div class="form-group has-label">

                    @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", maxlength = "100" } })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })

                </div>
                <div class="form-group has-label">

                    @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", maxlength = "20" } })
                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })

                </div>
                <div class="form-group has-label">

                    @Html.LabelFor(model => model.contact_name, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.contact_name, new { htmlAttributes = new { @class = "form-control", maxlength = "100" } })
                    @Html.ValidationMessageFor(model => model.contact_name, "", new { @class = "text-danger" })

                </div>

                <div class="form-group has-label">

                    @Html.LabelFor(model => model.user_email, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.user_email, new { htmlAttributes = new { @class = "form-control", maxlength = "150" } })
                    @Html.ValidationMessageFor(model => model.user_email, "", new { @class = "text-danger" })


                    <span class="text-danger field-validation-error email-error"></span>

                </div>

                <div class="form-group has-label">

                    @Html.LabelFor(model => model.user_email2, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.user_email2, new { htmlAttributes = new { @class = "form-control", maxlength = "150" } })
                    @Html.ValidationMessageFor(model => model.user_email2, "", new { @class = "text-danger" })




                </div>
                <div class="row">
                    <label class="col-sm-2 col-form-label">  @Html.LabelFor(model => model.user_role_id, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.DropDownList("user_role_id", (IEnumerable<SelectListItem>)ViewBag.roles, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.user_role_id, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <label class="col-sm-2 col-form-label"> @Html.LabelFor(model => model.user_status_id, htmlAttributes: new { @class = "" })</label>

                    <div class="col-sm-4">

                        <div class="form-group">
                            @Html.DropDownList("user_status_id", (IEnumerable<SelectListItem>)ViewBag.estatus, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.user_status_id, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>



            </div><!-- end content-->
                <div class="card-footer text-right">

                    <button id="btnCancelar" type="button" class="btn btn-primary">Regresar</button>
                    <button type="submit" class="btn btn-primary">Crear</button>
                </div>
            }
        </div><!--  end card  -->
    </div> <!-- end col-md-12 -->
</div> <!-- end row -->

@section Scripts {
    <script type="text/javascript">
        function InicializarResidencia() {
            //debugger;
            if ($("#address_country_id").val() == "45") {
                $(".address_department").show();
            }

            else {
                $(".address_department").hide();
                $("#department_id").each(function () { //added a each loop here
                    $(this).select2('val', '')
                });
                $("#address_municipality_id").each(function () { //added a each loop here
                    $(this).select2('val', '')
                });
                $('#department_id').val('');
                $('#address_municipality_id').val('');
            }
        }
        $(function () {
            $("#user_role_id").select2({ theme: "bootstrap" });
            $("#user_status_id").select2({ theme: "bootstrap" });
            $("#nationality_id").select2({ theme: "bootstrap" });
            $("#document_type_id").select2({ theme: "bootstrap" });

            $("#address_country_id").select2({ theme: "bootstrap" });
            $("#department_id").select2({ theme: "bootstrap" });
            $("#address_municipality_id").select2({ theme: "bootstrap" });
            InicializarResidencia();
            $("#address_country_id").on('select2:select', function (e) {
                //debugger;
                if ($("#address_country_id").val() == "45") {
                    $(".address_department").show();
                }

                else {
                    $(".address_department").hide();
                    $("#department_id").each(function () { //added a each loop here
                        $(this).select2('val', '')
                    });
                    $("#address_municipality_id").each(function () { //added a each loop here
                        $(this).select2('val', '')
                    });
                    $('#department_id').val('');
                    $('#address_municipality_id').val('');
                }
            });

            $('#department_id').on('select2:select', function (e) {
                // Do something

                console.log($("#department_id").val());
                $('#address_municipality_id').empty();
                $.ajax({
                    type: 'POST',
                    url: '/Account/ObtenerMunicipalities',
                    data: {
                        department_id: $("#department_id").val()
                    }
                }).then(function (data) {
                    // create the option and append to Select2
                    var i;
                    for (i = 0; i < data.length; i++) {
                        var option = new Option(data[i].Text, data[i].Value, false, false);
                        $("#address_municipality_id").append(option).trigger('change');
                    }


                    // manually trigger the `select2:select` event
                    $("#address_municipality_id").trigger({
                        type: 'select2:select',
                        params: {
                            data: data
                        }
                    });
                });


            });
            $("#institution_ids").select2({
                tokenSeparators: [','],
                theme: "bootstrap",
                language: "es",
                ajax: {
                    url: '/Account/ObtenerInstituciones',
                    type: "POST",
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term,
                            page: params.page || 1
                        };
                    },
                    processResults: function (data, params) {
                        // parse the results into the format expected by Select2
                        // since we are using custom formatting functions we do not need to
                        // alter the remote JSON data, except to indicate that infinite
                        // scrolling can be used
                        params.page = params.page || 1;

                        return {
                            results: data.items,
                            pagination: {
                                more: (params.page * 10) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                minimumInputLength: 0,

            });
        });

        $("#btnCancelar").click(function () {
            window.location.href = "/User";
        });
        $('.email-error').html('');
        $('#form-user').on('submit', function (e) { //use on if jQuery 1.7+
            //prevent form from submitting
            debugger;
            e.preventDefault();
            var form = this;
            if ($("#form-user").valid()) {


                var valido = false;
                $.ajaxSetup({
                    async: false
                });
                 $.ajax({
                        url: "@Url.Action("Verificar", "User")",
                        type: "POST",
                     data: { user_id: 0, email: $('#user_email').val() }
                    })
                    .done(function (data) {
                        valido = data.valido;
                    })
                    .fail(function (data) {
                        console.log("error");
                    })
                    .always(function (data) {
                        console.log("complete");
                    });



                // Volvemos a dejar las llamadas AJAX síncronas
               $.ajaxSetup({
                    async: true
                });

                if (valido) {
                    form.submit();
                }
                else {
                    $('.email-error').html('<span id="name-error" class="">Ya existe un usuario con el mismo correo electrónico.</span>');
                    return false;
                }




            }

            return false;
        });

    </script>
}
