@model Domain.Entities.ConfigurationViewModel



@{
    ViewBag.HeaderTitleLink = Url.Action("index", "Configuration");
    ViewBag.HeaderTitle = "Configuraciones";
    ViewBag.Title = "Editar Configuración";

    ViewBag.active = "edit_config";

}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">@ViewBag.Title</h4>
            </div>
            @using (Html.BeginForm("Index", "Configuration", FormMethod.Post, new { id = "form-edit", title = "Editar" }))
            {
                <div class="card-body">


                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.configuration_id)
                    <div class="form-group has-label">

                        @Html.LabelFor(model => model.terms_conditions, htmlAttributes: new { @class = "" })
                        @Html.TextAreaFor(model => model.terms_conditions, new { @class = "form-control textarea-editor" })
                        @Html.ValidationMessageFor(model => model.terms_conditions, "", new { @class = "text-danger" })

                    </div>


                    <div class="form-group has-label">

                        @Html.LabelFor(model => model.exclude_speakers, htmlAttributes: new { @class = "" })
                        @Html.TextAreaFor(model => model.exclude_speakers, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.exclude_speakers, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group has-label">

                        @Html.LabelFor(model => model.remove_titles_speaker, htmlAttributes: new { @class = "" })
                        @Html.TextAreaFor(model => model.remove_titles_speaker, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.remove_titles_speaker, "", new { @class = "text-danger" })

                    </div>


                </div><!-- end content-->
                <div class="card-footer text-right">


                    <button type="submit" class="btn btn-primary">Actualizar</button>
                </div>
            }
        </div><!--  end card  -->
    </div> <!-- end col-md-12 -->
</div> <!-- end row -->




@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
    <!--<script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.2/summernote.js"></script>-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote-bs4.js"></script>
    <script type="text/javascript" src="/Scripts/summernote-es-ES.js"></script>
    <!--<link href="http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.2/summernote.css" rel="stylesheet">-->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote-bs4.css" rel="stylesheet">
    <script type="text/javascript">


        $('.textarea-editor').summernote({

            lang: 'es-ES',
            height: 400, // set editor height
            minHeight: null, // set minimum height of editor
            maxHeight: null, // set maximum height of editor
            focus: false // set focus to editable area after initializing summernote
        });

        $('#form-edit').on('submit', function (e) { //use on if jQuery 1.7+
            //prevent form from submitting
            debugger;
            e.preventDefault();
            var form = this;

            if ($("#form-edit").valid()) {



                form.submit();




            }

            return false;
        });

    </script>
}
