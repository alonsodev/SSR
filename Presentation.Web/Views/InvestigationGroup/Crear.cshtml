@model Domain.Entities.InvestigationGroupViewModel



@{
    ViewBag.HeaderTitleLink = Url.Action("index", "investigation_group");
    ViewBag.HeaderTitle = "Grupos de Investigación";
    ViewBag.Title = "Crear Grupo de Investigación";

    ViewBag.active = "investigation_groups";

}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">@ViewBag.Title</h4>
            </div>
            @using (Html.BeginForm("Crear", "InvestigationGroup", FormMethod.Post, new { id = "form-registrar", title = "Crear Grupo de Investigación" }))
            {
            <div class="card-body">


                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group has-label">

                    @Html.LabelFor(model => model.institution_id, htmlAttributes: new { @class = "" })

                    @Html.DropDownList("institution_id", (IEnumerable<SelectListItem>)ViewBag.institutions, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.institution_id, "", new { @class = "text-danger" })
                </div>

              
                <div class="form-group has-label">

                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    <span class="text-danger field-validation-error name-error"></span>
                </div>







            </div><!-- end content-->
            <div class="card-footer text-right">


                <button id="btnCancelar" type="button" class="btn btn-primary">Regresar</button>
                <button type="submit" class="btn btn-primary">Crear</button>
            </div>
            }
        </div><!--  end card  -->
    </div> <!-- end col-md-12 -->
</div> <!-- end row -->




@section Scripts {

    <script type="text/javascript">
        $(function () {
            $("#institution_id").select2({
                theme: "bootstrap",
                language: "es",
                ajax: {
                    url: '/Account/ObtenerInstituciones',
                    type: "POST",
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term,
                            page: params.page || 1
                        };
                    },
                    processResults: function (data, params) {
                        // parse the results into the format expected by Select2
                        // since we are using custom formatting functions we do not need to
                        // alter the remote JSON data, except to indicate that infinite
                        // scrolling can be used
                        params.page = params.page || 1;

                        return {
                            results: data.items,
                            pagination: {
                                more: (params.page * 10) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                minimumInputLength: 0,

            });
        });
        $("#btnCancelar").click(function () {
            window.location.href = "/InvestigationGroup";
        });

        $('#form-registrar').on('submit', function (e) { //use on if jQuery 1.7+
            //prevent form from submitting
            debugger;
            e.preventDefault();
            var form = this;
            $('.name-error').html('');
            if ($("#form-registrar").valid()) {


               var valido = false;
                $.ajaxSetup({
                    async: false
                });
                 $.ajax({
                        url: "@Url.Action("Verificar", "InvestigationGroup")",
                        type: "POST",
                     data: { id_investigation_group: 0, name: $('#name').val() }
                    })
                    .done(function (data) {
                        valido = data.valido;
                    })
                    .fail(function (data) {
                        console.log("error");
                    })
                    .always(function (data) {
                        console.log("complete");
                    });



                // Volvemos a dejar las llamadas AJAX síncronas
               $.ajaxSetup({
                    async: true
                });

                if (valido) {
                    form.submit();
                }
                else {
                    $('.name-error').html('<span id="name-error" class="">Ya existe un grupo de investigacion con el mismo nombre.</span>');
                    return false;
                }




            }

            return false;
        });

    </script>
}
